(define (f n)
  (cond ( (< n 3) n)
        ( else (+ (f (- n 1) )
                  (* 2 (f (- n 2) )) 
                  (* 3 (f (- n 3) ))
                  )
               )
        )
  )

(define (f-iter n)
  (if (< n 3)
    n
    (fi 0 1 2 n)
    )
  )
(define (fi o oo ooo count)
  (if (< count 3)
    ooo
    (fi oo ooo (+ (* 3 o) (* 2 oo) ooo) (- count 1))
    )
  )

(f-iter 1)
(f-iter 4)
(f-iter 20)
(f 3)
(f 1)
(f 4)
(f 20)
